[package]
name = "opte-core"
version = "0.1.0"
authors = ["Ryan Zezeski <ryan@oxide.computer>"]
edition = "2021"

[features]
default = ["std", "usdt"]
# This feature indicates that OPTE is being built with std so that it
# may be used by a userland binary/library for the purpose of userland
# emulation/testing.
std = ["libc"]

[dependencies]
cfg-if = "0.1"
cstr_core = "0.2.3"
heapless = "0.7.9"
illumos-ddi-dki = { path = "../illumos-ddi-dki", default-features = false }
libc = { version = "0.2", optional = true }
postcard = { version = "0.7.0", features = ["alloc"], default-features = false }
#
# XXX usdt is really a dev dependency, but when I move it there weird
# stuff happens (TM). Maybe to do with feature flags?
#
usdt = { version = "*", optional = true }
zerocopy = "0.6.1"

#
# XXX I'm using both anymap (and Miachel's no_std branch) purely out
# of convenience. At this time I'm pretty sure I want to make use of
# Any for some runtime polymorphism for the purpose of dealing with
# port resources. I noticed that anymap does not seem to be actively
# maintained (though it also seems fairly complete with the exception
# of no_std support and maybe a handful of other things), so we may
# want to come back around and just use Any directly for our purposes.
# Even if we stick with anymap, we certainly don't want to rely on
# someone's branch going forward.
#
[dependencies.anymap]
git = "https://github.com/michaelmelanson/anymap"
branch = "no_std"

[dependencies.serde]
version = "1.0"
default-features = false
features = ["alloc", "derive"]

[dependencies.smoltcp]
version = "0.8.0"
default-features = false
#
# TODO Would defmt be of any use?
#
features = ["alloc", "medium-ethernet", "proto-ipv4", "proto-ipv6", "proto-dhcpv4", "socket", "socket-raw"]

[dev-dependencies]
pcap-parser = { version = "0.11.1", features = ["serialize"] }
