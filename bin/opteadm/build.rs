use std::error::Error;
use std::process::Command;

fn main() -> Result<(), Box<dyn Error>> {
    println!("cargo:rerun-if-changed=../../.git");

    let commit_count_out =
        Command::new("git").args(["rev-list", "--count", "HEAD"]).output()?;

    if commit_count_out.status.success() {
        let commit_count: u64 =
            std::str::from_utf8(&commit_count_out.stdout)?.trim().parse()?;

        std::fs::write(
            "src/gen.rs",
            format!(
                "\
// This file is autogenerated by build.rs -- do not edit!

/// Number of git commits present at build time, used for OPTE versioning.
pub const COMMIT_COUNT: u64 = {commit_count};
"
            ),
        )?;

        Ok(())
    } else {
        let utf8_err = std::str::from_utf8(&commit_count_out.stderr).ok();
        Err(format!("Git commit count was unsuccessful: {utf8_err:?}").into())
    }
}
